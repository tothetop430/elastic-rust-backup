//Autogenerated

use hyper::header::{Headers, ContentType};
use hyper::client::response::Response;
use hyper::error::Result;

pub fn delete_id(client: &'a mut hyper::Client, base: String, id: String)
 -> Result<Response>{
    let mut url_fmtd = String::with_capacity(base.len() + 18 + id.len());
    url_fmtd.push_str(&base);
    url_fmtd.push_str("/_search/template/");
    url_fmtd.push_str(&id);
    let mut headers = Headers::new();
    headers.set(ContentType::json());
    let res = client.delete(&url_fmtd).headers(headers);
    res.send()
}
